{"ast":null,"code":"var _jsxFileName = \"/Users/mcakmakali/Desktop/redux-example/src/features/posts/ReactionButtons.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { reactionAdded } from './postsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reactionEmoji = {\n  thumbsUp: '👍',\n  hooray: '🎉',\n  heart: '❤️',\n  rocket: '🚀',\n  eyes: '👀'\n};\nexport const ReactionButtons = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const dispatch = useDispatch();\n  const reactionButtons = Object.entries(reactionEmoji).map(_ref2 => {\n    let [name, emoji] = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"muted-button reaction-button\",\n      onClick: () => {\n        dispatch(reactionAdded({\n          postId: post.id,\n          reactions\n        }));\n      },\n      children: [emoji, \" \", post.reactions[name]]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: reactionButtons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ReactionButtons, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ReactionButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactionButtons\");","map":{"version":3,"names":["React","useDispatch","reactionAdded","reactionEmoji","thumbsUp","hooray","heart","rocket","eyes","ReactionButtons","post","dispatch","reactionButtons","Object","entries","map","name","emoji","postId","id","reactions"],"sources":["/Users/mcakmakali/Desktop/redux-example/src/features/posts/ReactionButtons.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { reactionAdded } from './postsSlice'\n\nconst reactionEmoji = {\n  thumbsUp: '👍',\n  hooray: '🎉',\n  heart: '❤️',\n  rocket: '🚀',\n  eyes: '👀'\n}\n\nexport const ReactionButtons = ({ post }) => {\n  const dispatch = useDispatch()\n\n  const reactionButtons = Object.entries(reactionEmoji).map(([name, emoji]) => {\n    return (\n      <button\n        key={name}\n        type=\"button\"\n        className=\"muted-button reaction-button\"\n        onClick={() => {\n            dispatch(reactionAdded({postId: post.id, reactions}))\n        }\n          \n        }\n      >\n        {emoji} {post.reactions[name]}\n      </button>\n    )\n  })\n\n  return <div>{reactionButtons}</div>\n}"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE,IADU;EAEpBC,MAAM,EAAE,IAFY;EAGpBC,KAAK,EAAE,IAHa;EAIpBC,MAAM,EAAE,IAJY;EAKpBC,IAAI,EAAE;AALc,CAAtB;AAQA,OAAO,MAAMC,eAAe,GAAG,QAAc;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC3C,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;EAEA,MAAMW,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeX,aAAf,EAA8BY,GAA9B,CAAkC,SAAmB;IAAA,IAAlB,CAACC,IAAD,EAAOC,KAAP,CAAkB;IAC3E,oBACE;MAEE,IAAI,EAAC,QAFP;MAGE,SAAS,EAAC,8BAHZ;MAIE,OAAO,EAAE,MAAM;QACXN,QAAQ,CAACT,aAAa,CAAC;UAACgB,MAAM,EAAER,IAAI,CAACS,EAAd;UAAkBC;QAAlB,CAAD,CAAd,CAAR;MACH,CANH;MAAA,WAUGH,KAVH,OAUWP,IAAI,CAACU,SAAL,CAAeJ,IAAf,CAVX;IAAA,GACOA,IADP;MAAA;MAAA;MAAA;IAAA,QADF;EAcD,CAfuB,CAAxB;EAiBA,oBAAO;IAAA,UAAMJ;EAAN;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CArBM;;GAAMH,e;UACMR,W;;;KADNQ,e"},"metadata":{},"sourceType":"module"}