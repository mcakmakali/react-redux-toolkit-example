{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createXMLHttpRequestOverride = void 0;\n/**\n * XMLHttpRequest override class.\n * Inspired by https://github.com/marvinhagemeister/xhr-mocklet.\n */\n\nvar until_1 = require(\"@open-draft/until\");\n\nvar headers_utils_1 = require(\"headers-utils\");\n\nvar xmldom_1 = require(\"@xmldom/xmldom\");\n\nvar parseJson_1 = require(\"../../utils/parseJson\");\n\nvar toIsoResponse_1 = require(\"../../utils/toIsoResponse\");\n\nvar uuid_1 = require(\"../../utils/uuid\");\n\nvar bufferFrom_1 = require(\"./utils/bufferFrom\");\n\nvar createEvent_1 = require(\"./utils/createEvent\");\n\nvar createDebug = require('debug');\n\nvar createXMLHttpRequestOverride = function (options) {\n  var _a;\n\n  var pureXMLHttpRequest = options.pureXMLHttpRequest,\n      observer = options.observer,\n      resolver = options.resolver;\n  var debug = createDebug('XHR');\n  return _a =\n  /** @class */\n  function () {\n    function XMLHttpRequestOverride() {\n      // Collection of events modified by `addEventListener`/`removeEventListener` calls.\n      this._events = [];\n      this.UNSENT = 0;\n      this.OPENED = 1;\n      this.HEADERS_RECEIVED = 2;\n      this.LOADING = 3;\n      this.DONE = 4;\n      this.onreadystatechange = null;\n      /* Events */\n\n      this.onabort = null;\n      this.onerror = null;\n      this.onload = null;\n      this.onloadend = null;\n      this.onloadstart = null;\n      this.onprogress = null;\n      this.ontimeout = null;\n      this.url = '';\n      this.method = 'GET';\n      this.readyState = this.UNSENT;\n      this.withCredentials = false;\n      this.status = 200;\n      this.statusText = 'OK';\n      this.data = '';\n      this.response = '';\n      this.responseType = 'text';\n      this.responseText = '';\n      this.responseXML = null;\n      this.responseURL = '';\n      this.upload = null;\n      this.timeout = 0;\n      this._requestHeaders = new headers_utils_1.Headers();\n      this._responseHeaders = new headers_utils_1.Headers();\n    }\n\n    XMLHttpRequestOverride.prototype.setReadyState = function (nextState) {\n      if (nextState === this.readyState) {\n        return;\n      }\n\n      debug('readyState change %d -> %d', this.readyState, nextState);\n      this.readyState = nextState;\n\n      if (nextState !== this.UNSENT) {\n        debug('triggerring readystate change...');\n        this.trigger('readystatechange');\n      }\n    };\n    /**\n     * Triggers both direct callback and attached event listeners\n     * for the given event.\n     */\n\n\n    XMLHttpRequestOverride.prototype.trigger = function (eventName, options) {\n      var e_1, _a;\n\n      debug('trigger \"%s\" (%d)', eventName, this.readyState);\n      debug('resolve listener for event \"%s\"', eventName); // @ts-expect-error XMLHttpRequest class has no index signature.\n\n      var callback = this[\"on\" + eventName];\n      callback === null || callback === void 0 ? void 0 : callback.call(this, createEvent_1.createEvent(this, eventName, options));\n\n      try {\n        for (var _b = __values(this._events), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var event_1 = _c.value;\n\n          if (event_1.name === eventName) {\n            debug('calling mock event listener \"%s\" (%d)', eventName, this.readyState);\n            event_1.listener.call(this, createEvent_1.createEvent(this, eventName, options));\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return this;\n    };\n\n    XMLHttpRequestOverride.prototype.reset = function () {\n      debug('reset');\n      this.setReadyState(this.UNSENT);\n      this.status = 200;\n      this.statusText = 'OK';\n      this.data = '';\n      this.response = null;\n      this.responseText = null;\n      this.responseXML = null;\n      this._requestHeaders = new headers_utils_1.Headers();\n      this._responseHeaders = new headers_utils_1.Headers();\n    };\n\n    XMLHttpRequestOverride.prototype.open = function (method, url, async, user, password) {\n      if (async === void 0) {\n        async = true;\n      }\n\n      return __awaiter(this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          debug = createDebug(\"XHR \" + method + \" \" + url);\n          debug('open', {\n            method: method,\n            url: url,\n            async: async,\n            user: user,\n            password: password\n          });\n          this.reset();\n          this.setReadyState(this.OPENED);\n\n          if (typeof url === 'undefined') {\n            this.url = method;\n            this.method = 'GET';\n          } else {\n            this.url = url;\n            this.method = method;\n            this.async = async;\n            this.user = user;\n            this.password = password;\n          }\n\n          return [2\n          /*return*/\n          ];\n        });\n      });\n    };\n\n    XMLHttpRequestOverride.prototype.send = function (data) {\n      var _this = this;\n\n      debug('send %s %s', this.method, this.url);\n      this.data = data || '';\n      var url;\n\n      try {\n        url = new URL(this.url);\n      } catch (error) {\n        // Assume a relative URL, if construction of a new `URL` instance fails.\n        // Since `XMLHttpRequest` always executed in a DOM-like environment,\n        // resolve the relative request URL against the current window location.\n        url = new URL(this.url, window.location.href);\n      }\n\n      debug('request headers', this._requestHeaders); // Create an intercepted request instance exposed to the request intercepting middleware.\n\n      var isoRequest = {\n        id: uuid_1.uuidv4(),\n        url: url,\n        method: this.method,\n        body: this.data,\n        headers: this._requestHeaders\n      };\n      observer.emit('request', isoRequest);\n      debug('awaiting mocked response...');\n      Promise.resolve(until_1.until(function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          return __generator(this, function (_a) {\n            return [2\n            /*return*/\n            , resolver(isoRequest, this)];\n          });\n        });\n      })).then(function (_a) {\n        var _b;\n\n        var _c = __read(_a, 2),\n            middlewareException = _c[0],\n            mockedResponse = _c[1]; // When the request middleware throws an exception, error the request.\n        // This cancels the request and is similar to a network error.\n\n\n        if (middlewareException) {\n          debug('middleware function threw an exception!', middlewareException); // No way to propagate the actual error message.\n\n          _this.trigger('error');\n\n          _this.abort();\n\n          return;\n        } // Return a mocked response, if provided in the middleware.\n\n\n        if (mockedResponse) {\n          debug('received mocked response', mockedResponse); // Trigger a loadstart event to indicate the initialization of the fetch.\n\n          _this.trigger('loadstart');\n\n          _this.status = mockedResponse.status || 200;\n          _this.statusText = mockedResponse.statusText || 'OK';\n          _this._responseHeaders = mockedResponse.headers ? headers_utils_1.objectToHeaders(mockedResponse.headers) : new headers_utils_1.Headers();\n          debug('set response status', _this.status, _this.statusText);\n          debug('set response headers', _this._responseHeaders); // Mark that response headers has been received\n          // and trigger a ready state event to reflect received headers\n          // in a custom `onreadystatechange` callback.\n\n          _this.setReadyState(_this.HEADERS_RECEIVED);\n\n          debug('response type', _this.responseType);\n          _this.response = _this.getResponseBody(mockedResponse.body);\n          _this.responseText = mockedResponse.body || '';\n          _this.responseXML = _this.getResponseXML();\n          debug('set response body', _this.response);\n\n          if (mockedResponse.body && _this.response) {\n            _this.setReadyState(_this.LOADING); // Presense of the mocked response implies a response body (not null).\n            // Presense of the coerced `this.response` implies the mocked body is valid.\n\n\n            var bodyBuffer = bufferFrom_1.bufferFrom(mockedResponse.body); // Trigger a progress event based on the mocked response body.\n\n            _this.trigger('progress', {\n              loaded: bodyBuffer.length,\n              total: bodyBuffer.length\n            });\n          }\n          /**\n           * Explicitly mark the request as done so its response never hangs.\n           * @see https://github.com/mswjs/interceptors/issues/13\n           */\n\n\n          _this.setReadyState(_this.DONE); // Trigger a load event to indicate the fetch has succeeded.\n\n\n          _this.trigger('load'); // Trigger a loadend event to indicate the fetch has completed.\n\n\n          _this.trigger('loadend');\n\n          observer.emit('response', isoRequest, toIsoResponse_1.toIsoResponse(mockedResponse));\n        } else {\n          debug('no mocked response received!'); // Perform an original request, when the request middleware returned no mocked response.\n\n          var originalRequest_1 = new pureXMLHttpRequest();\n          debug('opening an original request %s %s', _this.method, _this.url);\n          originalRequest_1.open(_this.method, _this.url, (_b = _this.async) !== null && _b !== void 0 ? _b : true, _this.user, _this.password); // Reflect a successful state of the original request\n          // on the patched instance.\n\n          originalRequest_1.addEventListener('load', function () {\n            debug('original \"onload\"');\n            _this.status = originalRequest_1.status;\n            _this.statusText = originalRequest_1.statusText;\n            _this.responseURL = originalRequest_1.responseURL;\n            _this.responseType = originalRequest_1.responseType;\n            _this.response = originalRequest_1.response;\n            _this.responseText = originalRequest_1.responseText;\n            _this.responseXML = originalRequest_1.responseXML;\n            debug('set mock request readyState to DONE'); // Explicitly mark the mocked request instance as done\n            // so the response never hangs.\n\n            /**\n             * @note `readystatechange` listener is called TWICE\n             * in the case of unhandled request.\n             */\n\n            _this.setReadyState(_this.DONE);\n\n            debug('received original response', _this.status, _this.statusText);\n            debug('original response body:', _this.response);\n            var responseHeaders = originalRequest_1.getAllResponseHeaders();\n            debug('original response headers:\\n', responseHeaders);\n            _this._responseHeaders = headers_utils_1.stringToHeaders(responseHeaders);\n            debug('original response headers (normalized)', _this._responseHeaders);\n            debug('original response finished');\n            observer.emit('response', isoRequest, {\n              status: originalRequest_1.status,\n              statusText: originalRequest_1.statusText,\n              headers: _this._responseHeaders,\n              body: originalRequest_1.response\n            });\n          }); // Assign callbacks and event listeners from the intercepted XHR instance\n          // to the original XHR instance.\n\n          _this.propagateCallbacks(originalRequest_1);\n\n          _this.propagateListeners(originalRequest_1);\n\n          _this.propagateHeaders(originalRequest_1, _this._requestHeaders);\n\n          if (_this.async) {\n            originalRequest_1.timeout = _this.timeout;\n          }\n\n          debug('send', _this.data);\n          originalRequest_1.send(_this.data);\n        }\n      });\n    };\n\n    XMLHttpRequestOverride.prototype.abort = function () {\n      debug('abort');\n\n      if (this.readyState > this.UNSENT && this.readyState < this.DONE) {\n        this.setReadyState(this.UNSENT);\n        this.trigger('abort');\n      }\n    };\n\n    XMLHttpRequestOverride.prototype.dispatchEvent = function () {\n      return false;\n    };\n\n    XMLHttpRequestOverride.prototype.setRequestHeader = function (name, value) {\n      debug('set request header \"%s\" to \"%s\"', name, value);\n\n      this._requestHeaders.append(name, value);\n    };\n\n    XMLHttpRequestOverride.prototype.getResponseHeader = function (name) {\n      debug('get response header \"%s\"', name);\n\n      if (this.readyState < this.HEADERS_RECEIVED) {\n        debug('cannot return a header: headers not received (state: %s)', this.readyState);\n        return null;\n      }\n\n      var headerValue = this._responseHeaders.get(name);\n\n      debug('resolved response header \"%s\" to \"%s\"', name, headerValue, this._responseHeaders);\n      return headerValue;\n    };\n\n    XMLHttpRequestOverride.prototype.getAllResponseHeaders = function () {\n      debug('get all response headers');\n\n      if (this.readyState < this.HEADERS_RECEIVED) {\n        debug('cannot return headers: headers not received (state: %s)', this.readyState);\n        return '';\n      }\n\n      return headers_utils_1.headersToString(this._responseHeaders);\n    };\n\n    XMLHttpRequestOverride.prototype.addEventListener = function (name, listener) {\n      debug('addEventListener', name, listener);\n\n      this._events.push({\n        name: name,\n        listener: listener\n      });\n    };\n\n    XMLHttpRequestOverride.prototype.removeEventListener = function (name, listener) {\n      debug('removeEventListener', name, listener);\n      this._events = this._events.filter(function (storedEvent) {\n        return storedEvent.name !== name && storedEvent.listener !== listener;\n      });\n    };\n\n    XMLHttpRequestOverride.prototype.overrideMimeType = function () {};\n    /**\n     * Resolves the response based on the `responseType` value.\n     */\n\n\n    XMLHttpRequestOverride.prototype.getResponseBody = function (body) {\n      // Handle an improperly set \"null\" value of the mocked response body.\n      var textBody = body !== null && body !== void 0 ? body : '';\n      debug('coerced response body to', textBody);\n\n      switch (this.responseType) {\n        case 'json':\n          {\n            debug('resolving response body as JSON');\n            return parseJson_1.parseJson(textBody);\n          }\n\n        case 'blob':\n          {\n            var blobType = this.getResponseHeader('content-type') || 'text/plain';\n            debug('resolving response body as Blob', {\n              type: blobType\n            });\n            return new Blob([textBody], {\n              type: blobType\n            });\n          }\n\n        case 'arraybuffer':\n          {\n            debug('resolving response body as ArrayBuffer');\n            var arrayBuffer = bufferFrom_1.bufferFrom(textBody);\n            return arrayBuffer;\n          }\n\n        default:\n          return textBody;\n      }\n    };\n\n    XMLHttpRequestOverride.prototype.getResponseXML = function () {\n      var contentType = this.getResponseHeader('Content-Type');\n\n      if (contentType === 'application/xml' || contentType === 'text/xml') {\n        return new xmldom_1.DOMParser().parseFromString(this.responseText, contentType);\n      }\n\n      return null;\n    };\n    /**\n     * Propagates mock XMLHttpRequest instance callbacks\n     * to the given XMLHttpRequest instance.\n     */\n\n\n    XMLHttpRequestOverride.prototype.propagateCallbacks = function (request) {\n      request.onabort = this.abort;\n      request.onerror = this.onerror;\n      request.ontimeout = this.ontimeout;\n      request.onload = this.onload;\n      request.onloadstart = this.onloadstart;\n      request.onloadend = this.onloadend;\n      request.onprogress = this.onprogress;\n      request.onreadystatechange = this.onreadystatechange;\n    };\n    /**\n     * Propagates the mock XMLHttpRequest instance listeners\n     * to the given XMLHttpRequest instance.\n     */\n\n\n    XMLHttpRequestOverride.prototype.propagateListeners = function (request) {\n      debug('propagating request listeners (%d) to the original request', this._events.length, this._events);\n\n      this._events.forEach(function (_a) {\n        var name = _a.name,\n            listener = _a.listener;\n        request.addEventListener(name, listener);\n      });\n    };\n\n    XMLHttpRequestOverride.prototype.propagateHeaders = function (request, headers) {\n      debug('propagating request headers to the original request', headers); // Preserve the request headers casing.\n\n      Object.entries(headers.raw()).forEach(function (_a) {\n        var _b = __read(_a, 2),\n            name = _b[0],\n            value = _b[1];\n\n        debug('setting \"%s\" (%s) header on the original request', name, value);\n        request.setRequestHeader(name, value);\n      });\n    };\n\n    return XMLHttpRequestOverride;\n  }(),\n  /* Request state */\n  _a.UNSENT = 0, _a.OPENED = 1, _a.HEADERS_RECEIVED = 2, _a.LOADING = 3, _a.DONE = 4, _a;\n};\n\nexports.createXMLHttpRequestOverride = createXMLHttpRequestOverride;","map":{"version":3,"mappings":"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","names":["createDebug","require","createXMLHttpRequestOverride","options","observer","resolver","debug","url","method","readyState","UNSENT","withCredentials","status","statusText","data","response","responseType","responseText","responseXML","responseURL","upload","timeout","_requestHeaders","headers_utils_1","_responseHeaders","XMLHttpRequestOverride","nextState","trigger","eventName","callback","call","createEvent_1","_events","_c","event_1","name","listener","setReadyState","async","user","password","reset","OPENED","URL","error","window","location","href","isoRequest","id","uuid_1","body","headers","emit","Promise","resolve","until_1","then","_a","middlewareException","mockedResponse","_this","abort","HEADERS_RECEIVED","getResponseBody","getResponseXML","LOADING","bodyBuffer","bufferFrom_1","loaded","length","total","DONE","toIsoResponse_1","originalRequest_1","pureXMLHttpRequest","open","_b","addEventListener","responseHeaders","getAllResponseHeaders","propagateCallbacks","propagateListeners","propagateHeaders","send","value","append","headerValue","get","push","filter","storedEvent","textBody","parseJson_1","blobType","getResponseHeader","type","Blob","arrayBuffer","contentType","xmldom_1","parseFromString","request","onabort","onerror","ontimeout","onload","onloadstart","onloadend","onprogress","onreadystatechange","forEach","Object","entries","raw","setRequestHeader","exports"],"sourceRoot":"","sources":["../../../src/interceptors/XMLHttpRequest/XMLHttpRequestOverride.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}