{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { sub } from 'date-fns';\nconst initialState = {\n  posts: [],\n  loading: false\n};\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const {\n        postId,\n        reaction\n      } = action.payload;\n      const existingPost = state.find(post => post.id === postId);\n\n      if (existingPost) {\n        existingPost.reactions[reaction]++;\n      }\n    },\n\n    postAdded: {\n      reducer: (state, action) => {\n        state.push(action.payload);\n      },\n      prepare: (title, content, userId) => {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content,\n            user: userId,\n            date: new Date().toISOString()\n          }\n        };\n      }\n    },\n\n    postUpdated(state, action) {\n      const {\n        id,\n        title,\n        content\n      } = action.payload;\n      const existingPost = state.find(post => post.id === id);\n\n      if (existingPost) {\n        existingPost.title = title;\n        existingPost.content = content;\n      }\n    }\n\n  }\n});\nexport const {\n  postAdded,\n  postUpdated,\n  reactionAdded\n} = postsSlice.actions;\nexport default postsSlice.reducer;\nexport const selectAllPost = state => state.posts;\nexport const selectPostById = (state, postId) => state.posts.find(post => post.id === postId);","map":{"version":3,"names":["createSlice","nanoid","sub","initialState","posts","loading","postsSlice","name","reducers","reactionAdded","state","action","postId","reaction","payload","existingPost","find","post","id","reactions","postAdded","reducer","push","prepare","title","content","userId","user","date","Date","toISOString","postUpdated","actions","selectAllPost","selectPostById"],"sources":["/Users/mcakmakali/Desktop/redux-example/src/features/posts/postsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { nanoid } from '@reduxjs/toolkit'\nimport { sub } from 'date-fns'\n\nconst initialState = {\n  posts: [],\n  loading: false\n}\nexport const postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    reactionAdded(state, action) {\n      const { postId, reaction } = action.payload\n      const existingPost = state.find((post) => post.id === postId)\n      if (existingPost) {\n        existingPost.reactions[reaction]++\n      }\n    },\n    postAdded: {\n      reducer: (state, action) => {\n        state.push(action.payload)\n      },\n      prepare: (title, content, userId) => {\n        return {\n          payload: {\n            id: nanoid(),\n            title,\n            content,\n            user: userId,\n            date: new Date().toISOString(),\n          },\n        }\n      },\n    },\n\n    postUpdated(state, action) {\n      const { id, title, content } = action.payload\n      const existingPost = state.find((post) => post.id === id)\n      if (existingPost) {\n        existingPost.title = title\n        existingPost.content = content\n      }\n    },\n  },\n})\n\nexport const {  postAdded, postUpdated, reactionAdded} = postsSlice.actions\n\nexport default postsSlice.reducer\n\nexport const selectAllPost = state => state.posts;\nexport const selectPostById = (state, postId) => state.posts.find(post => post.id === postId)"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,GAAT,QAAoB,UAApB;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,OAAO,EAAE;AAFU,CAArB;AAIA,OAAO,MAAMC,UAAU,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,OAD8B;EAEpCJ,YAFoC;EAGpCK,QAAQ,EAAE;IACRC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC3B,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAuBF,MAAM,CAACG,OAApC;MACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAjC,CAArB;;MACA,IAAIG,YAAJ,EAAkB;QAChBA,YAAY,CAACI,SAAb,CAAuBN,QAAvB;MACD;IACF,CAPO;;IAQRO,SAAS,EAAE;MACTC,OAAO,EAAE,CAACX,KAAD,EAAQC,MAAR,KAAmB;QAC1BD,KAAK,CAACY,IAAN,CAAWX,MAAM,CAACG,OAAlB;MACD,CAHQ;MAITS,OAAO,EAAE,CAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,KAA4B;QACnC,OAAO;UACLZ,OAAO,EAAE;YACPI,EAAE,EAAEjB,MAAM,EADH;YAEPuB,KAFO;YAGPC,OAHO;YAIPE,IAAI,EAAED,MAJC;YAKPE,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX;UALC;QADJ,CAAP;MASD;IAdQ,CARH;;IAyBRC,WAAW,CAACrB,KAAD,EAAQC,MAAR,EAAgB;MACzB,MAAM;QAAEO,EAAF;QAAMM,KAAN;QAAaC;MAAb,IAAyBd,MAAM,CAACG,OAAtC;MACA,MAAMC,YAAY,GAAGL,KAAK,CAACM,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAjC,CAArB;;MACA,IAAIH,YAAJ,EAAkB;QAChBA,YAAY,CAACS,KAAb,GAAqBA,KAArB;QACAT,YAAY,CAACU,OAAb,GAAuBA,OAAvB;MACD;IACF;;EAhCO;AAH0B,CAAD,CAA9B;AAuCP,OAAO,MAAM;EAAGL,SAAH;EAAcW,WAAd;EAA2BtB;AAA3B,IAA4CH,UAAU,CAAC0B,OAA7D;AAEP,eAAe1B,UAAU,CAACe,OAA1B;AAEA,OAAO,MAAMY,aAAa,GAAGvB,KAAK,IAAIA,KAAK,CAACN,KAArC;AACP,OAAO,MAAM8B,cAAc,GAAG,CAACxB,KAAD,EAAQE,MAAR,KAAmBF,KAAK,CAACN,KAAN,CAAYY,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYN,MAArC,CAA1C"},"metadata":{},"sourceType":"module"}